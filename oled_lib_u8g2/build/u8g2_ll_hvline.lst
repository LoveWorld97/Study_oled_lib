ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"u8g2_ll_hvline.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.u8g2_ll_hvline_vertical_top_lsb,"ax",%progbits
  16              		.align	1
  17              		.global	u8g2_ll_hvline_vertical_top_lsb
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	u8g2_ll_hvline_vertical_top_lsb:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "u8g2_lib/u8g2_ll_hvline.c"
   1:u8g2_lib/u8g2_ll_hvline.c **** /*
   2:u8g2_lib/u8g2_ll_hvline.c **** 
   3:u8g2_lib/u8g2_ll_hvline.c ****   u8g2_ll_hvline.c
   4:u8g2_lib/u8g2_ll_hvline.c ****   
   5:u8g2_lib/u8g2_ll_hvline.c ****   low level hvline
   6:u8g2_lib/u8g2_ll_hvline.c **** 
   7:u8g2_lib/u8g2_ll_hvline.c ****   Universal 8bit Graphics Library (https://github.com/olikraus/u8g2/)
   8:u8g2_lib/u8g2_ll_hvline.c **** 
   9:u8g2_lib/u8g2_ll_hvline.c ****   Copyright (c) 2016, olikraus@gmail.com
  10:u8g2_lib/u8g2_ll_hvline.c ****   All rights reserved.
  11:u8g2_lib/u8g2_ll_hvline.c **** 
  12:u8g2_lib/u8g2_ll_hvline.c ****   Redistribution and use in source and binary forms, with or without modification, 
  13:u8g2_lib/u8g2_ll_hvline.c ****   are permitted provided that the following conditions are met:
  14:u8g2_lib/u8g2_ll_hvline.c **** 
  15:u8g2_lib/u8g2_ll_hvline.c ****   * Redistributions of source code must retain the above copyright notice, this list 
  16:u8g2_lib/u8g2_ll_hvline.c ****     of conditions and the following disclaimer.
  17:u8g2_lib/u8g2_ll_hvline.c ****     
  18:u8g2_lib/u8g2_ll_hvline.c ****   * Redistributions in binary form must reproduce the above copyright notice, this 
  19:u8g2_lib/u8g2_ll_hvline.c ****     list of conditions and the following disclaimer in the documentation and/or other 
  20:u8g2_lib/u8g2_ll_hvline.c ****     materials provided with the distribution.
  21:u8g2_lib/u8g2_ll_hvline.c **** 
  22:u8g2_lib/u8g2_ll_hvline.c ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  23:u8g2_lib/u8g2_ll_hvline.c ****   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  24:u8g2_lib/u8g2_ll_hvline.c ****   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:u8g2_lib/u8g2_ll_hvline.c ****   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  26:u8g2_lib/u8g2_ll_hvline.c ****   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  27:u8g2_lib/u8g2_ll_hvline.c ****   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  28:u8g2_lib/u8g2_ll_hvline.c ****   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  29:u8g2_lib/u8g2_ll_hvline.c ****   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  30:u8g2_lib/u8g2_ll_hvline.c ****   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  31:u8g2_lib/u8g2_ll_hvline.c ****   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 2


  32:u8g2_lib/u8g2_ll_hvline.c ****   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  33:u8g2_lib/u8g2_ll_hvline.c ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  34:u8g2_lib/u8g2_ll_hvline.c ****   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  35:u8g2_lib/u8g2_ll_hvline.c **** 
  36:u8g2_lib/u8g2_ll_hvline.c **** 
  37:u8g2_lib/u8g2_ll_hvline.c ****   *ptr |= or_mask
  38:u8g2_lib/u8g2_ll_hvline.c ****   *ptr ^= xor_mask
  39:u8g2_lib/u8g2_ll_hvline.c ****   
  40:u8g2_lib/u8g2_ll_hvline.c ****   color = 0:   or_mask = 1, xor_mask = 1
  41:u8g2_lib/u8g2_ll_hvline.c ****   color = 1:   or_mask = 1, xor_mask = 0
  42:u8g2_lib/u8g2_ll_hvline.c ****   color = 2:   or_mask = 0, xor_mask = 1
  43:u8g2_lib/u8g2_ll_hvline.c **** 
  44:u8g2_lib/u8g2_ll_hvline.c ****   if ( color <= 1 )
  45:u8g2_lib/u8g2_ll_hvline.c ****     or_mask  = mask;
  46:u8g2_lib/u8g2_ll_hvline.c ****   if ( color != 1 )
  47:u8g2_lib/u8g2_ll_hvline.c ****     xor_mask = mask;
  48:u8g2_lib/u8g2_ll_hvline.c ****     
  49:u8g2_lib/u8g2_ll_hvline.c **** */
  50:u8g2_lib/u8g2_ll_hvline.c **** 
  51:u8g2_lib/u8g2_ll_hvline.c **** #include "u8g2.h"
  52:u8g2_lib/u8g2_ll_hvline.c **** #include <assert.h>
  53:u8g2_lib/u8g2_ll_hvline.c **** 
  54:u8g2_lib/u8g2_ll_hvline.c **** /*=================================================*/
  55:u8g2_lib/u8g2_ll_hvline.c **** /*
  56:u8g2_lib/u8g2_ll_hvline.c ****   u8g2_ll_hvline_vertical_top_lsb
  57:u8g2_lib/u8g2_ll_hvline.c ****     SSD13xx
  58:u8g2_lib/u8g2_ll_hvline.c ****     UC1701    
  59:u8g2_lib/u8g2_ll_hvline.c **** */
  60:u8g2_lib/u8g2_ll_hvline.c **** 
  61:u8g2_lib/u8g2_ll_hvline.c **** 
  62:u8g2_lib/u8g2_ll_hvline.c **** #ifdef U8G2_WITH_HVLINE_SPEED_OPTIMIZATION
  63:u8g2_lib/u8g2_ll_hvline.c **** 
  64:u8g2_lib/u8g2_ll_hvline.c **** /*
  65:u8g2_lib/u8g2_ll_hvline.c ****   x,y		Upper left position of the line within the local buffer (not the display!)
  66:u8g2_lib/u8g2_ll_hvline.c ****   len		length of the line in pixel, len must not be 0
  67:u8g2_lib/u8g2_ll_hvline.c ****   dir		0: horizontal line (left to right)
  68:u8g2_lib/u8g2_ll_hvline.c **** 		1: vertical line (top to bottom)
  69:u8g2_lib/u8g2_ll_hvline.c ****   asumption: 
  70:u8g2_lib/u8g2_ll_hvline.c ****     all clipping done
  71:u8g2_lib/u8g2_ll_hvline.c **** */
  72:u8g2_lib/u8g2_ll_hvline.c **** void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, u
  73:u8g2_lib/u8g2_ll_hvline.c **** {
  28              		.loc 1 73 1 view -0
  29              		.cfi_startproc
  30              		@ args = 4, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 73 1 is_stmt 0 view .LVU1
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 9DF814E0 		ldrb	lr, [sp, #20]	@ zero_extendqisi2
  74:u8g2_lib/u8g2_ll_hvline.c ****   uint16_t offset;
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 3


  42              		.loc 1 74 3 is_stmt 1 view .LVU2
  75:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t *ptr;
  43              		.loc 1 75 3 view .LVU3
  76:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t bit_pos, mask;
  44              		.loc 1 76 3 view .LVU4
  77:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t or_mask, xor_mask;
  45              		.loc 1 77 3 view .LVU5
  78:u8g2_lib/u8g2_ll_hvline.c **** #ifdef __unix
  79:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t *max_ptr = u8g2->tile_buf_ptr + u8g2_GetU8x8(u8g2)->display_info->tile_width*u8g2->tile_b
  80:u8g2_lib/u8g2_ll_hvline.c **** #endif
  81:u8g2_lib/u8g2_ll_hvline.c **** 
  82:u8g2_lib/u8g2_ll_hvline.c ****   //assert(x >= u8g2->buf_x0);
  83:u8g2_lib/u8g2_ll_hvline.c ****   //assert(x < u8g2_GetU8x8(u8g2)->display_info->tile_width*8);
  84:u8g2_lib/u8g2_ll_hvline.c ****   //assert(y >= u8g2->buf_y0);
  85:u8g2_lib/u8g2_ll_hvline.c ****   //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
  86:u8g2_lib/u8g2_ll_hvline.c ****   
  87:u8g2_lib/u8g2_ll_hvline.c ****   /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
  88:u8g2_lib/u8g2_ll_hvline.c ****   bit_pos = y;		/* overflow truncate is ok here... */
  46              		.loc 1 88 3 view .LVU6
  47              	.LVL1:
  89:u8g2_lib/u8g2_ll_hvline.c ****   bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
  48              		.loc 1 89 3 view .LVU7
  49              		.loc 1 89 11 is_stmt 0 view .LVU8
  50 0006 02F00705 		and	r5, r2, #7
  51              	.LVL2:
  90:u8g2_lib/u8g2_ll_hvline.c ****   mask = 1;
  52              		.loc 1 90 3 is_stmt 1 view .LVU9
  91:u8g2_lib/u8g2_ll_hvline.c ****   mask <<= bit_pos;
  53              		.loc 1 91 3 view .LVU10
  54              		.loc 1 91 8 is_stmt 0 view .LVU11
  55 000a 0124     		movs	r4, #1
  56 000c AC40     		lsls	r4, r4, r5
  57 000e E4B2     		uxtb	r4, r4
  58              	.LVL3:
  92:u8g2_lib/u8g2_ll_hvline.c **** 
  93:u8g2_lib/u8g2_ll_hvline.c ****   or_mask = 0;
  59              		.loc 1 93 3 is_stmt 1 view .LVU12
  94:u8g2_lib/u8g2_ll_hvline.c ****   xor_mask = 0;
  60              		.loc 1 94 3 view .LVU13
  95:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
  61              		.loc 1 95 3 view .LVU14
  62              		.loc 1 95 12 is_stmt 0 view .LVU15
  63 0010 90F88270 		ldrb	r7, [r0, #130]	@ zero_extendqisi2
  64              		.loc 1 95 6 view .LVU16
  65 0014 012F     		cmp	r7, #1
  66 0016 19D9     		bls	.L10
  93:u8g2_lib/u8g2_ll_hvline.c ****   xor_mask = 0;
  67              		.loc 1 93 11 view .LVU17
  68 0018 0026     		movs	r6, #0
  69              	.L2:
  70              	.LVL4:
  96:u8g2_lib/u8g2_ll_hvline.c ****     or_mask  = mask;
  97:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color != 1 )
  71              		.loc 1 97 3 is_stmt 1 view .LVU18
  72              		.loc 1 97 6 is_stmt 0 view .LVU19
  73 001a 012F     		cmp	r7, #1
  74 001c 18D0     		beq	.L14
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 4


  75              	.LVL5:
  76              	.L3:
  98:u8g2_lib/u8g2_ll_hvline.c ****     xor_mask = mask;
  99:u8g2_lib/u8g2_ll_hvline.c **** 
 100:u8g2_lib/u8g2_ll_hvline.c **** 
 101:u8g2_lib/u8g2_ll_hvline.c ****   offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
  77              		.loc 1 101 3 is_stmt 1 view .LVU20
 102:u8g2_lib/u8g2_ll_hvline.c ****   offset &= ~7;
  78              		.loc 1 102 3 view .LVU21
  79              		.loc 1 102 10 is_stmt 0 view .LVU22
  80 001e 02F0F802 		and	r2, r2, #248
  81              	.LVL6:
 103:u8g2_lib/u8g2_ll_hvline.c ****   offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
  82              		.loc 1 103 3 is_stmt 1 view .LVU23
  83              		.loc 1 103 31 is_stmt 0 view .LVU24
  84 0022 0768     		ldr	r7, [r0]
  85              		.loc 1 103 45 view .LVU25
  86 0024 97F810C0 		ldrb	ip, [r7, #16]	@ zero_extendqisi2
  87              	.LVL7:
 104:u8g2_lib/u8g2_ll_hvline.c ****   ptr = u8g2->tile_buf_ptr;
  88              		.loc 1 104 3 is_stmt 1 view .LVU26
  89              		.loc 1 104 7 is_stmt 0 view .LVU27
  90 0028 476B     		ldr	r7, [r0, #52]
  91              	.LVL8:
 105:u8g2_lib/u8g2_ll_hvline.c ****   ptr += offset;
  92              		.loc 1 105 3 is_stmt 1 view .LVU28
 106:u8g2_lib/u8g2_ll_hvline.c ****   ptr += x;
  93              		.loc 1 106 3 view .LVU29
  94              		.loc 1 106 7 is_stmt 0 view .LVU30
  95 002a 02FB0C12 		mla	r2, r2, ip, r1
  96              	.LVL9:
  97              		.loc 1 106 7 view .LVU31
  98 002e B918     		adds	r1, r7, r2
  99              	.LVL10:
 107:u8g2_lib/u8g2_ll_hvline.c ****   
 108:u8g2_lib/u8g2_ll_hvline.c ****   if ( dir == 0 )
 100              		.loc 1 108 3 is_stmt 1 view .LVU32
 101              		.loc 1 108 6 is_stmt 0 view .LVU33
 102 0030 BEF1000F 		cmp	lr, #0
 103 0034 16D1     		bne	.L4
 104              	.LVL11:
 105              	.L5:
 109:u8g2_lib/u8g2_ll_hvline.c ****   {
 110:u8g2_lib/u8g2_ll_hvline.c ****       do
 106              		.loc 1 110 7 is_stmt 1 discriminator 1 view .LVU34
 111:u8g2_lib/u8g2_ll_hvline.c ****       {
 112:u8g2_lib/u8g2_ll_hvline.c **** #ifdef __unix
 113:u8g2_lib/u8g2_ll_hvline.c **** 	assert(ptr < max_ptr);
 114:u8g2_lib/u8g2_ll_hvline.c **** #endif
 115:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= or_mask;
 107              		.loc 1 115 2 discriminator 1 view .LVU35
 108              		.loc 1 115 7 is_stmt 0 discriminator 1 view .LVU36
 109 0036 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 110 0038 3243     		orrs	r2, r2, r6
 111 003a D2B2     		uxtb	r2, r2
 116:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr ^= xor_mask;
 112              		.loc 1 116 2 is_stmt 1 discriminator 1 view .LVU37
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 5


 113              		.loc 1 116 7 is_stmt 0 discriminator 1 view .LVU38
 114 003c 6240     		eors	r2, r2, r4
 115 003e 01F8012B 		strb	r2, [r1], #1
 116              	.LVL12:
 117:u8g2_lib/u8g2_ll_hvline.c **** 	ptr++;
 117              		.loc 1 117 2 is_stmt 1 discriminator 1 view .LVU39
 118:u8g2_lib/u8g2_ll_hvline.c **** 	len--;
 118              		.loc 1 118 2 discriminator 1 view .LVU40
 119              		.loc 1 118 5 is_stmt 0 discriminator 1 view .LVU41
 120 0042 013B     		subs	r3, r3, #1
 121              	.LVL13:
 119:u8g2_lib/u8g2_ll_hvline.c ****       } while( len != 0 );
 122              		.loc 1 119 14 is_stmt 1 discriminator 1 view .LVU42
 123              		.loc 1 119 7 is_stmt 0 discriminator 1 view .LVU43
 124 0044 13F0FF03 		ands	r3, r3, #255
 125              	.LVL14:
 126              		.loc 1 119 7 discriminator 1 view .LVU44
 127 0048 F5D1     		bne	.L5
 128              	.LVL15:
 129              	.L1:
 120:u8g2_lib/u8g2_ll_hvline.c ****   }
 121:u8g2_lib/u8g2_ll_hvline.c ****   else
 122:u8g2_lib/u8g2_ll_hvline.c ****   {    
 123:u8g2_lib/u8g2_ll_hvline.c ****     do
 124:u8g2_lib/u8g2_ll_hvline.c ****     {
 125:u8g2_lib/u8g2_ll_hvline.c **** #ifdef __unix
 126:u8g2_lib/u8g2_ll_hvline.c ****       assert(ptr < max_ptr);
 127:u8g2_lib/u8g2_ll_hvline.c **** #endif
 128:u8g2_lib/u8g2_ll_hvline.c ****       *ptr |= or_mask;
 129:u8g2_lib/u8g2_ll_hvline.c ****       *ptr ^= xor_mask;
 130:u8g2_lib/u8g2_ll_hvline.c ****       
 131:u8g2_lib/u8g2_ll_hvline.c ****       bit_pos++;
 132:u8g2_lib/u8g2_ll_hvline.c ****       bit_pos &= 7;
 133:u8g2_lib/u8g2_ll_hvline.c **** 
 134:u8g2_lib/u8g2_ll_hvline.c ****       len--;
 135:u8g2_lib/u8g2_ll_hvline.c **** 
 136:u8g2_lib/u8g2_ll_hvline.c ****       if ( bit_pos == 0 )
 137:u8g2_lib/u8g2_ll_hvline.c ****       {
 138:u8g2_lib/u8g2_ll_hvline.c **** 	ptr+=u8g2->pixel_buf_width;	/* 6 Jan 17: Changed u8g2->width to u8g2->pixel_buf_width, issue #148 
 139:u8g2_lib/u8g2_ll_hvline.c **** 		
 140:u8g2_lib/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color <= 1 )
 141:u8g2_lib/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 142:u8g2_lib/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color != 1 )
 143:u8g2_lib/u8g2_ll_hvline.c **** 	  xor_mask = 1;
 144:u8g2_lib/u8g2_ll_hvline.c ****       }
 145:u8g2_lib/u8g2_ll_hvline.c ****       else
 146:u8g2_lib/u8g2_ll_hvline.c ****       {
 147:u8g2_lib/u8g2_ll_hvline.c **** 	or_mask <<= 1;
 148:u8g2_lib/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 149:u8g2_lib/u8g2_ll_hvline.c ****       }
 150:u8g2_lib/u8g2_ll_hvline.c ****     } while( len != 0 );
 151:u8g2_lib/u8g2_ll_hvline.c ****   }
 152:u8g2_lib/u8g2_ll_hvline.c **** }
 130              		.loc 1 152 1 view .LVU45
 131 004a F0BD     		pop	{r4, r5, r6, r7, pc}
 132              	.LVL16:
 133              	.L10:
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 6


  96:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color != 1 )
 134              		.loc 1 96 14 view .LVU46
 135 004c 2646     		mov	r6, r4
 136 004e E4E7     		b	.L2
 137              	.LVL17:
 138              	.L14:
  94:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
 139              		.loc 1 94 12 view .LVU47
 140 0050 0024     		movs	r4, #0
 141              	.LVL18:
  94:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
 142              		.loc 1 94 12 view .LVU48
 143 0052 E4E7     		b	.L3
 144              	.LVL19:
 145              	.L15:
 141:u8g2_lib/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color != 1 )
 146              		.loc 1 141 13 view .LVU49
 147 0054 0126     		movs	r6, #1
 148              	.LVL20:
 141:u8g2_lib/u8g2_ll_hvline.c **** 	if ( u8g2->draw_color != 1 )
 149              		.loc 1 141 13 view .LVU50
 150 0056 17E0     		b	.L8
 151              	.LVL21:
 152              	.L7:
 147:u8g2_lib/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 153              		.loc 1 147 2 is_stmt 1 view .LVU51
 147:u8g2_lib/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 154              		.loc 1 147 10 is_stmt 0 view .LVU52
 155 0058 7600     		lsls	r6, r6, #1
 156              	.LVL22:
 147:u8g2_lib/u8g2_ll_hvline.c **** 	xor_mask <<= 1;
 157              		.loc 1 147 10 view .LVU53
 158 005a F6B2     		uxtb	r6, r6
 159              	.LVL23:
 148:u8g2_lib/u8g2_ll_hvline.c ****       }
 160              		.loc 1 148 2 is_stmt 1 view .LVU54
 148:u8g2_lib/u8g2_ll_hvline.c ****       }
 161              		.loc 1 148 11 is_stmt 0 view .LVU55
 162 005c 6400     		lsls	r4, r4, #1
 163              	.LVL24:
 148:u8g2_lib/u8g2_ll_hvline.c ****       }
 164              		.loc 1 148 11 view .LVU56
 165 005e E4B2     		uxtb	r4, r4
 166              	.LVL25:
 167              	.L9:
 150:u8g2_lib/u8g2_ll_hvline.c ****   }
 168              		.loc 1 150 12 is_stmt 1 view .LVU57
 150:u8g2_lib/u8g2_ll_hvline.c ****   }
 169              		.loc 1 150 5 is_stmt 0 view .LVU58
 170 0060 002B     		cmp	r3, #0
 171 0062 F2D0     		beq	.L1
 172              	.L4:
 173              	.LVL26:
 123:u8g2_lib/u8g2_ll_hvline.c ****     {
 174              		.loc 1 123 5 is_stmt 1 view .LVU59
 128:u8g2_lib/u8g2_ll_hvline.c ****       *ptr ^= xor_mask;
 175              		.loc 1 128 7 view .LVU60
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 7


 128:u8g2_lib/u8g2_ll_hvline.c ****       *ptr ^= xor_mask;
 176              		.loc 1 128 12 is_stmt 0 view .LVU61
 177 0064 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 178 0066 3243     		orrs	r2, r2, r6
 179 0068 D2B2     		uxtb	r2, r2
 129:u8g2_lib/u8g2_ll_hvline.c ****       
 180              		.loc 1 129 7 is_stmt 1 view .LVU62
 129:u8g2_lib/u8g2_ll_hvline.c ****       
 181              		.loc 1 129 12 is_stmt 0 view .LVU63
 182 006a 6240     		eors	r2, r2, r4
 183 006c 0A70     		strb	r2, [r1]
 131:u8g2_lib/u8g2_ll_hvline.c ****       bit_pos &= 7;
 184              		.loc 1 131 7 is_stmt 1 view .LVU64
 131:u8g2_lib/u8g2_ll_hvline.c ****       bit_pos &= 7;
 185              		.loc 1 131 14 is_stmt 0 view .LVU65
 186 006e 6A1C     		adds	r2, r5, #1
 187              	.LVL27:
 132:u8g2_lib/u8g2_ll_hvline.c **** 
 188              		.loc 1 132 7 is_stmt 1 view .LVU66
 134:u8g2_lib/u8g2_ll_hvline.c **** 
 189              		.loc 1 134 7 view .LVU67
 134:u8g2_lib/u8g2_ll_hvline.c **** 
 190              		.loc 1 134 10 is_stmt 0 view .LVU68
 191 0070 013B     		subs	r3, r3, #1
 192              	.LVL28:
 134:u8g2_lib/u8g2_ll_hvline.c **** 
 193              		.loc 1 134 10 view .LVU69
 194 0072 DBB2     		uxtb	r3, r3
 195              	.LVL29:
 136:u8g2_lib/u8g2_ll_hvline.c ****       {
 196              		.loc 1 136 7 is_stmt 1 view .LVU70
 136:u8g2_lib/u8g2_ll_hvline.c ****       {
 197              		.loc 1 136 10 is_stmt 0 view .LVU71
 198 0074 12F00705 		ands	r5, r2, #7
 199 0078 EED1     		bne	.L7
 138:u8g2_lib/u8g2_ll_hvline.c **** 		
 200              		.loc 1 138 2 is_stmt 1 view .LVU72
 138:u8g2_lib/u8g2_ll_hvline.c **** 		
 201              		.loc 1 138 11 is_stmt 0 view .LVU73
 202 007a 90F83A20 		ldrb	r2, [r0, #58]	@ zero_extendqisi2
 203              	.LVL30:
 138:u8g2_lib/u8g2_ll_hvline.c **** 		
 204              		.loc 1 138 5 view .LVU74
 205 007e 1144     		add	r1, r1, r2
 206              	.LVL31:
 140:u8g2_lib/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 207              		.loc 1 140 2 is_stmt 1 view .LVU75
 140:u8g2_lib/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 208              		.loc 1 140 11 is_stmt 0 view .LVU76
 209 0080 90F88220 		ldrb	r2, [r0, #130]	@ zero_extendqisi2
 140:u8g2_lib/u8g2_ll_hvline.c **** 	  or_mask  = 1;
 210              		.loc 1 140 5 view .LVU77
 211 0084 012A     		cmp	r2, #1
 212 0086 E5D9     		bls	.L15
 213              	.LVL32:
 214              	.L8:
 142:u8g2_lib/u8g2_ll_hvline.c **** 	  xor_mask = 1;
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 8


 215              		.loc 1 142 2 is_stmt 1 view .LVU78
 142:u8g2_lib/u8g2_ll_hvline.c **** 	  xor_mask = 1;
 216              		.loc 1 142 5 is_stmt 0 view .LVU79
 217 0088 012A     		cmp	r2, #1
 218 008a E9D0     		beq	.L9
 143:u8g2_lib/u8g2_ll_hvline.c ****       }
 219              		.loc 1 143 13 view .LVU80
 220 008c 0124     		movs	r4, #1
 221              	.LVL33:
 143:u8g2_lib/u8g2_ll_hvline.c ****       }
 222              		.loc 1 143 13 view .LVU81
 223 008e E7E7     		b	.L9
 224              		.cfi_endproc
 225              	.LFE0:
 227              		.section	.text.u8g2_ll_hvline_horizontal_right_lsb,"ax",%progbits
 228              		.align	1
 229              		.global	u8g2_ll_hvline_horizontal_right_lsb
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
 235              	u8g2_ll_hvline_horizontal_right_lsb:
 236              	.LVL34:
 237              	.LFB1:
 153:u8g2_lib/u8g2_ll_hvline.c **** 
 154:u8g2_lib/u8g2_ll_hvline.c **** 
 155:u8g2_lib/u8g2_ll_hvline.c **** 
 156:u8g2_lib/u8g2_ll_hvline.c **** #else /* U8G2_WITH_HVLINE_SPEED_OPTIMIZATION */
 157:u8g2_lib/u8g2_ll_hvline.c **** 
 158:u8g2_lib/u8g2_ll_hvline.c **** /*
 159:u8g2_lib/u8g2_ll_hvline.c ****   x,y position within the buffer
 160:u8g2_lib/u8g2_ll_hvline.c **** */
 161:u8g2_lib/u8g2_ll_hvline.c **** static void u8g2_draw_pixel_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y)
 162:u8g2_lib/u8g2_ll_hvline.c **** {
 163:u8g2_lib/u8g2_ll_hvline.c ****   uint16_t offset;
 164:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t *ptr;
 165:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t bit_pos, mask;
 166:u8g2_lib/u8g2_ll_hvline.c ****   
 167:u8g2_lib/u8g2_ll_hvline.c ****   //assert(x >= u8g2->buf_x0);
 168:u8g2_lib/u8g2_ll_hvline.c ****   //assert(x < u8g2_GetU8x8(u8g2)->display_info->tile_width*8);
 169:u8g2_lib/u8g2_ll_hvline.c ****   //assert(y >= u8g2->buf_y0);
 170:u8g2_lib/u8g2_ll_hvline.c ****   //assert(y < u8g2_GetU8x8(u8g2)->display_info->tile_height*8);
 171:u8g2_lib/u8g2_ll_hvline.c ****   
 172:u8g2_lib/u8g2_ll_hvline.c ****   /* bytes are vertical, lsb on top (y=0), msb at bottom (y=7) */
 173:u8g2_lib/u8g2_ll_hvline.c ****   bit_pos = y;		/* overflow truncate is ok here... */
 174:u8g2_lib/u8g2_ll_hvline.c ****   bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
 175:u8g2_lib/u8g2_ll_hvline.c ****   mask = 1;
 176:u8g2_lib/u8g2_ll_hvline.c ****   mask <<= bit_pos;
 177:u8g2_lib/u8g2_ll_hvline.c **** 
 178:u8g2_lib/u8g2_ll_hvline.c ****   offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
 179:u8g2_lib/u8g2_ll_hvline.c ****   offset &= ~7;
 180:u8g2_lib/u8g2_ll_hvline.c ****   offset *= u8g2_GetU8x8(u8g2)->display_info->tile_width;
 181:u8g2_lib/u8g2_ll_hvline.c ****   ptr = u8g2->tile_buf_ptr;
 182:u8g2_lib/u8g2_ll_hvline.c ****   ptr += offset;
 183:u8g2_lib/u8g2_ll_hvline.c ****   ptr += x;
 184:u8g2_lib/u8g2_ll_hvline.c **** 
 185:u8g2_lib/u8g2_ll_hvline.c **** 
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 9


 186:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color <= 1 )
 187:u8g2_lib/u8g2_ll_hvline.c ****     *ptr |= mask;
 188:u8g2_lib/u8g2_ll_hvline.c ****   if ( u8g2->draw_color != 1 )
 189:u8g2_lib/u8g2_ll_hvline.c ****     *ptr ^= mask;
 190:u8g2_lib/u8g2_ll_hvline.c **** 
 191:u8g2_lib/u8g2_ll_hvline.c **** }
 192:u8g2_lib/u8g2_ll_hvline.c **** 
 193:u8g2_lib/u8g2_ll_hvline.c **** /*
 194:u8g2_lib/u8g2_ll_hvline.c ****   x,y		Upper left position of the line within the local buffer (not the display!)
 195:u8g2_lib/u8g2_ll_hvline.c ****   len		length of the line in pixel, len must not be 0
 196:u8g2_lib/u8g2_ll_hvline.c ****   dir		0: horizontal line (left to right)
 197:u8g2_lib/u8g2_ll_hvline.c **** 		1: vertical line (top to bottom)
 198:u8g2_lib/u8g2_ll_hvline.c ****   asumption: 
 199:u8g2_lib/u8g2_ll_hvline.c ****     all clipping done
 200:u8g2_lib/u8g2_ll_hvline.c **** */
 201:u8g2_lib/u8g2_ll_hvline.c **** void u8g2_ll_hvline_vertical_top_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t len, u
 202:u8g2_lib/u8g2_ll_hvline.c **** {
 203:u8g2_lib/u8g2_ll_hvline.c ****   if ( dir == 0 )
 204:u8g2_lib/u8g2_ll_hvline.c ****   {
 205:u8g2_lib/u8g2_ll_hvline.c ****     do
 206:u8g2_lib/u8g2_ll_hvline.c ****     {
 207:u8g2_lib/u8g2_ll_hvline.c ****       u8g2_draw_pixel_vertical_top_lsb(u8g2, x, y);
 208:u8g2_lib/u8g2_ll_hvline.c ****       x++;
 209:u8g2_lib/u8g2_ll_hvline.c ****       len--;
 210:u8g2_lib/u8g2_ll_hvline.c ****     } while( len != 0 );
 211:u8g2_lib/u8g2_ll_hvline.c ****   }
 212:u8g2_lib/u8g2_ll_hvline.c ****   else
 213:u8g2_lib/u8g2_ll_hvline.c ****   {
 214:u8g2_lib/u8g2_ll_hvline.c ****     do
 215:u8g2_lib/u8g2_ll_hvline.c ****     {
 216:u8g2_lib/u8g2_ll_hvline.c ****       u8g2_draw_pixel_vertical_top_lsb(u8g2, x, y);
 217:u8g2_lib/u8g2_ll_hvline.c ****       y++;
 218:u8g2_lib/u8g2_ll_hvline.c ****       len--;
 219:u8g2_lib/u8g2_ll_hvline.c ****     } while( len != 0 );
 220:u8g2_lib/u8g2_ll_hvline.c ****   }
 221:u8g2_lib/u8g2_ll_hvline.c **** }
 222:u8g2_lib/u8g2_ll_hvline.c **** 
 223:u8g2_lib/u8g2_ll_hvline.c **** 
 224:u8g2_lib/u8g2_ll_hvline.c **** #endif /* U8G2_WITH_HVLINE_SPEED_OPTIMIZATION */
 225:u8g2_lib/u8g2_ll_hvline.c **** 
 226:u8g2_lib/u8g2_ll_hvline.c **** /*=================================================*/
 227:u8g2_lib/u8g2_ll_hvline.c **** /*
 228:u8g2_lib/u8g2_ll_hvline.c ****   u8g2_ll_hvline_horizontal_right_lsb
 229:u8g2_lib/u8g2_ll_hvline.c ****     ST7920
 230:u8g2_lib/u8g2_ll_hvline.c **** */
 231:u8g2_lib/u8g2_ll_hvline.c **** 
 232:u8g2_lib/u8g2_ll_hvline.c **** #ifdef U8G2_WITH_HVLINE_SPEED_OPTIMIZATION
 233:u8g2_lib/u8g2_ll_hvline.c **** 
 234:u8g2_lib/u8g2_ll_hvline.c **** /*
 235:u8g2_lib/u8g2_ll_hvline.c ****   x,y		Upper left position of the line within the local buffer (not the display!)
 236:u8g2_lib/u8g2_ll_hvline.c ****   len		length of the line in pixel, len must not be 0
 237:u8g2_lib/u8g2_ll_hvline.c ****   dir		0: horizontal line (left to right)
 238:u8g2_lib/u8g2_ll_hvline.c **** 		1: vertical line (top to bottom)
 239:u8g2_lib/u8g2_ll_hvline.c ****   asumption: 
 240:u8g2_lib/u8g2_ll_hvline.c ****     all clipping done
 241:u8g2_lib/u8g2_ll_hvline.c **** */
 242:u8g2_lib/u8g2_ll_hvline.c **** 
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 10


 243:u8g2_lib/u8g2_ll_hvline.c **** /* SH1122, LD7032, ST7920, ST7986, LC7981, T6963, SED1330, RA8835, MAX7219, LS0 */ 
 244:u8g2_lib/u8g2_ll_hvline.c **** void u8g2_ll_hvline_horizontal_right_lsb(u8g2_t *u8g2, u8g2_uint_t x, u8g2_uint_t y, u8g2_uint_t le
 245:u8g2_lib/u8g2_ll_hvline.c **** {
 238              		.loc 1 245 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 4, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243              		.loc 1 245 1 is_stmt 0 view .LVU83
 244 0000 F0B4     		push	{r4, r5, r6, r7}
 245              	.LCFI1:
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 4, -16
 248              		.cfi_offset 5, -12
 249              		.cfi_offset 6, -8
 250              		.cfi_offset 7, -4
 251 0002 9DF81060 		ldrb	r6, [sp, #16]	@ zero_extendqisi2
 246:u8g2_lib/u8g2_ll_hvline.c ****   uint16_t offset;
 252              		.loc 1 246 3 is_stmt 1 view .LVU84
 247:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t *ptr;
 253              		.loc 1 247 3 view .LVU85
 248:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t bit_pos;
 254              		.loc 1 248 3 view .LVU86
 249:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t mask;
 255              		.loc 1 249 3 view .LVU87
 250:u8g2_lib/u8g2_ll_hvline.c ****   uint8_t tile_width = u8g2_GetU8x8(u8g2)->display_info->tile_width;
 256              		.loc 1 250 3 view .LVU88
 257              		.loc 1 250 42 is_stmt 0 view .LVU89
 258 0006 0468     		ldr	r4, [r0]
 259              		.loc 1 250 11 view .LVU90
 260 0008 257C     		ldrb	r5, [r4, #16]	@ zero_extendqisi2
 261              	.LVL35:
 251:u8g2_lib/u8g2_ll_hvline.c **** 
 252:u8g2_lib/u8g2_ll_hvline.c ****   bit_pos = x;		/* overflow truncate is ok here... */
 262              		.loc 1 252 3 is_stmt 1 view .LVU91
 253:u8g2_lib/u8g2_ll_hvline.c ****   bit_pos &= 7; 	/* ... because only the lowest 3 bits are needed */
 263              		.loc 1 253 3 view .LVU92
 264              		.loc 1 253 11 is_stmt 0 view .LVU93
 265 000a 01F00707 		and	r7, r1, #7
 266              	.LVL36:
 254:u8g2_lib/u8g2_ll_hvline.c ****   mask = 128;
 267              		.loc 1 254 3 is_stmt 1 view .LVU94
 255:u8g2_lib/u8g2_ll_hvline.c ****   mask >>= bit_pos;
 268              		.loc 1 255 3 view .LVU95
 269              		.loc 1 255 8 is_stmt 0 view .LVU96
 270 000e 8024     		movs	r4, #128
 271 0010 3C41     		asrs	r4, r4, r7
 272 0012 E4B2     		uxtb	r4, r4
 273              	.LVL37:
 256:u8g2_lib/u8g2_ll_hvline.c **** 
 257:u8g2_lib/u8g2_ll_hvline.c ****   offset = y;		/* y might be 8 or 16 bit, but we need 16 bit, so use a 16 bit variable */
 274              		.loc 1 257 3 is_stmt 1 view .LVU97
 258:u8g2_lib/u8g2_ll_hvline.c ****   offset *= tile_width;
 275              		.loc 1 258 3 view .LVU98
 259:u8g2_lib/u8g2_ll_hvline.c ****   offset += x>>3;
 276              		.loc 1 259 3 view .LVU99
 277              		.loc 1 259 10 is_stmt 0 view .LVU100
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 11


 278 0014 C908     		lsrs	r1, r1, #3
 279              	.LVL38:
 280              		.loc 1 259 10 view .LVU101
 281 0016 05FB0211 		mla	r1, r5, r2, r1
 282 001a 89B2     		uxth	r1, r1
 283              	.LVL39:
 260:u8g2_lib/u8g2_ll_hvline.c ****   ptr = u8g2->tile_buf_ptr;
 284              		.loc 1 260 3 is_stmt 1 view .LVU102
 285              		.loc 1 260 7 is_stmt 0 view .LVU103
 286 001c 426B     		ldr	r2, [r0, #52]
 287              	.LVL40:
 261:u8g2_lib/u8g2_ll_hvline.c ****   ptr += offset;
 288              		.loc 1 261 3 is_stmt 1 view .LVU104
 289              		.loc 1 261 7 is_stmt 0 view .LVU105
 290 001e 0A44     		add	r2, r2, r1
 291              	.LVL41:
 262:u8g2_lib/u8g2_ll_hvline.c ****   
 263:u8g2_lib/u8g2_ll_hvline.c ****   if ( dir == 0 )
 292              		.loc 1 263 3 is_stmt 1 view .LVU106
 293              		.loc 1 263 6 is_stmt 0 view .LVU107
 294 0020 3EBB     		cbnz	r6, .L17
 295 0022 09E0     		b	.L21
 296              	.LVL42:
 297              	.L26:
 264:u8g2_lib/u8g2_ll_hvline.c ****   {
 265:u8g2_lib/u8g2_ll_hvline.c ****       
 266:u8g2_lib/u8g2_ll_hvline.c ****     do
 267:u8g2_lib/u8g2_ll_hvline.c ****     {
 268:u8g2_lib/u8g2_ll_hvline.c **** 
 269:u8g2_lib/u8g2_ll_hvline.c ****       if ( u8g2->draw_color <= 1 )
 270:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 298              		.loc 1 270 2 is_stmt 1 view .LVU108
 299              		.loc 1 270 7 is_stmt 0 view .LVU109
 300 0024 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 301 0026 2143     		orrs	r1, r1, r4
 302 0028 1170     		strb	r1, [r2]
 303 002a 09E0     		b	.L18
 304              	.LVL43:
 305              	.L27:
 271:u8g2_lib/u8g2_ll_hvline.c ****       if ( u8g2->draw_color != 1 )
 272:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 273:u8g2_lib/u8g2_ll_hvline.c ****       
 274:u8g2_lib/u8g2_ll_hvline.c ****       mask >>= 1;
 275:u8g2_lib/u8g2_ll_hvline.c ****       if ( mask == 0 )
 276:u8g2_lib/u8g2_ll_hvline.c ****       {
 277:u8g2_lib/u8g2_ll_hvline.c **** 	mask = 128;
 306              		.loc 1 277 2 is_stmt 1 view .LVU110
 278:u8g2_lib/u8g2_ll_hvline.c ****         ptr++;
 307              		.loc 1 278 9 view .LVU111
 308              		.loc 1 278 12 is_stmt 0 view .LVU112
 309 002c 0132     		adds	r2, r2, #1
 310              	.LVL44:
 277:u8g2_lib/u8g2_ll_hvline.c ****         ptr++;
 311              		.loc 1 277 7 view .LVU113
 312 002e 8024     		movs	r4, #128
 313              	.LVL45:
 314              	.L20:
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 12


 279:u8g2_lib/u8g2_ll_hvline.c ****       }
 280:u8g2_lib/u8g2_ll_hvline.c ****       
 281:u8g2_lib/u8g2_ll_hvline.c ****       //x++;
 282:u8g2_lib/u8g2_ll_hvline.c ****       len--;
 315              		.loc 1 282 7 is_stmt 1 view .LVU114
 316              		.loc 1 282 10 is_stmt 0 view .LVU115
 317 0030 013B     		subs	r3, r3, #1
 318              	.LVL46:
 283:u8g2_lib/u8g2_ll_hvline.c ****     } while( len != 0 );
 319              		.loc 1 283 12 is_stmt 1 view .LVU116
 320              		.loc 1 283 5 is_stmt 0 view .LVU117
 321 0032 13F0FF03 		ands	r3, r3, #255
 322              	.LVL47:
 323              		.loc 1 283 5 view .LVU118
 324 0036 21D0     		beq	.L16
 325              	.L21:
 326              	.LVL48:
 266:u8g2_lib/u8g2_ll_hvline.c ****     {
 327              		.loc 1 266 5 is_stmt 1 view .LVU119
 269:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 328              		.loc 1 269 7 view .LVU120
 269:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 329              		.loc 1 269 16 is_stmt 0 view .LVU121
 330 0038 90F88210 		ldrb	r1, [r0, #130]	@ zero_extendqisi2
 269:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 331              		.loc 1 269 10 view .LVU122
 332 003c 0129     		cmp	r1, #1
 333 003e F1D9     		bls	.L26
 334              	.L18:
 271:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 335              		.loc 1 271 7 is_stmt 1 view .LVU123
 271:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 336              		.loc 1 271 16 is_stmt 0 view .LVU124
 337 0040 90F88210 		ldrb	r1, [r0, #130]	@ zero_extendqisi2
 271:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 338              		.loc 1 271 10 view .LVU125
 339 0044 0129     		cmp	r1, #1
 340 0046 02D0     		beq	.L19
 272:u8g2_lib/u8g2_ll_hvline.c ****       
 341              		.loc 1 272 2 is_stmt 1 view .LVU126
 272:u8g2_lib/u8g2_ll_hvline.c ****       
 342              		.loc 1 272 7 is_stmt 0 view .LVU127
 343 0048 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 344 004a 6140     		eors	r1, r1, r4
 345 004c 1170     		strb	r1, [r2]
 346              	.L19:
 274:u8g2_lib/u8g2_ll_hvline.c ****       if ( mask == 0 )
 347              		.loc 1 274 7 is_stmt 1 view .LVU128
 348              	.LVL49:
 275:u8g2_lib/u8g2_ll_hvline.c ****       {
 349              		.loc 1 275 7 view .LVU129
 275:u8g2_lib/u8g2_ll_hvline.c ****       {
 350              		.loc 1 275 10 is_stmt 0 view .LVU130
 351 004e 6408     		lsrs	r4, r4, #1
 352              	.LVL50:
 275:u8g2_lib/u8g2_ll_hvline.c ****       {
 353              		.loc 1 275 10 view .LVU131
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 13


 354 0050 EED1     		bne	.L20
 355 0052 EBE7     		b	.L27
 356              	.LVL51:
 357              	.L28:
 284:u8g2_lib/u8g2_ll_hvline.c ****   }
 285:u8g2_lib/u8g2_ll_hvline.c ****   else
 286:u8g2_lib/u8g2_ll_hvline.c ****   {
 287:u8g2_lib/u8g2_ll_hvline.c ****     do
 288:u8g2_lib/u8g2_ll_hvline.c ****     {
 289:u8g2_lib/u8g2_ll_hvline.c ****       if ( u8g2->draw_color <= 1 )
 290:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 358              		.loc 1 290 2 is_stmt 1 view .LVU132
 359              		.loc 1 290 7 is_stmt 0 view .LVU133
 360 0054 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 361 0056 2143     		orrs	r1, r1, r4
 362 0058 1170     		strb	r1, [r2]
 363              	.L23:
 291:u8g2_lib/u8g2_ll_hvline.c ****       if ( u8g2->draw_color != 1 )
 364              		.loc 1 291 7 is_stmt 1 view .LVU134
 365              		.loc 1 291 16 is_stmt 0 view .LVU135
 366 005a 90F88210 		ldrb	r1, [r0, #130]	@ zero_extendqisi2
 367              		.loc 1 291 10 view .LVU136
 368 005e 0129     		cmp	r1, #1
 369 0060 02D0     		beq	.L24
 292:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr ^= mask;
 370              		.loc 1 292 2 is_stmt 1 view .LVU137
 371              		.loc 1 292 7 is_stmt 0 view .LVU138
 372 0062 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 373 0064 6140     		eors	r1, r1, r4
 374 0066 1170     		strb	r1, [r2]
 375              	.L24:
 293:u8g2_lib/u8g2_ll_hvline.c ****       
 294:u8g2_lib/u8g2_ll_hvline.c ****       ptr += tile_width;
 376              		.loc 1 294 7 is_stmt 1 view .LVU139
 377              		.loc 1 294 11 is_stmt 0 view .LVU140
 378 0068 2A44     		add	r2, r2, r5
 379              	.LVL52:
 295:u8g2_lib/u8g2_ll_hvline.c ****       //y++;
 296:u8g2_lib/u8g2_ll_hvline.c ****       len--;
 380              		.loc 1 296 7 is_stmt 1 view .LVU141
 381              		.loc 1 296 10 is_stmt 0 view .LVU142
 382 006a 013B     		subs	r3, r3, #1
 383              	.LVL53:
 297:u8g2_lib/u8g2_ll_hvline.c ****     } while( len != 0 );
 384              		.loc 1 297 12 is_stmt 1 view .LVU143
 385              		.loc 1 297 5 is_stmt 0 view .LVU144
 386 006c 13F0FF03 		ands	r3, r3, #255
 387              	.LVL54:
 388              		.loc 1 297 5 view .LVU145
 389 0070 04D0     		beq	.L16
 390              	.L17:
 391              	.LVL55:
 287:u8g2_lib/u8g2_ll_hvline.c ****     {
 392              		.loc 1 287 5 is_stmt 1 view .LVU146
 289:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 393              		.loc 1 289 7 view .LVU147
 289:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 14


 394              		.loc 1 289 16 is_stmt 0 view .LVU148
 395 0072 90F88210 		ldrb	r1, [r0, #130]	@ zero_extendqisi2
 289:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 396              		.loc 1 289 10 view .LVU149
 397 0076 0129     		cmp	r1, #1
 398 0078 EFD8     		bhi	.L23
 289:u8g2_lib/u8g2_ll_hvline.c **** 	*ptr |= mask;
 399              		.loc 1 289 10 view .LVU150
 400 007a EBE7     		b	.L28
 401              	.LVL56:
 402              	.L16:
 298:u8g2_lib/u8g2_ll_hvline.c ****   }
 299:u8g2_lib/u8g2_ll_hvline.c **** }
 403              		.loc 1 299 1 view .LVU151
 404 007c F0BC     		pop	{r4, r5, r6, r7}
 405              	.LCFI2:
 406              		.cfi_restore 7
 407              		.cfi_restore 6
 408              		.cfi_restore 5
 409              		.cfi_restore 4
 410              		.cfi_def_cfa_offset 0
 411              	.LVL57:
 412              		.loc 1 299 1 view .LVU152
 413 007e 7047     		bx	lr
 414              		.cfi_endproc
 415              	.LFE1:
 417              		.text
 418              	.Letext0:
 419              		.file 2 "d:\\work_project\\9 2019-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 420              		.file 3 "d:\\work_project\\9 2019-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 421              		.file 4 "u8g2_lib/u8x8.h"
 422              		.file 5 "u8g2_lib/u8g2.h"
ARM GAS  C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 u8g2_ll_hvline.c
C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s:16     .text.u8g2_ll_hvline_vertical_top_lsb:00000000 $t
C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s:24     .text.u8g2_ll_hvline_vertical_top_lsb:00000000 u8g2_ll_hvline_vertical_top_lsb
C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s:228    .text.u8g2_ll_hvline_horizontal_right_lsb:00000000 $t
C:\Users\GKQ\AppData\Local\Temp\cc1xHBfj.s:235    .text.u8g2_ll_hvline_horizontal_right_lsb:00000000 u8g2_ll_hvline_horizontal_right_lsb

NO UNDEFINED SYMBOLS
